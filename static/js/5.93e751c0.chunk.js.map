{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","Ingredient","props","formattedPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","format","price","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ing","react_default","a","createElement","className","styles","key","Orders","_this$props","this","idToken","userId","onFetchOrders","orders","Spinner","loading","order","components_Order_Order","id","React","Component","connect","state","_state$auth","auth","_state$order","dispatch","fetchOrders","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,qBAAAC,WAAA,qJCoCHD,EAlCD,SAACE,GACb,IAAIC,EAAiB,IAAIC,KAAKC,aAAa,QAAS,CAClDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAOP,EAAMQ,OAEVC,EAAc,GAEpB,IAAK,IAAIC,KAAkBV,EAAMS,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQb,EAAMS,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,IAAI,SAACC,GACxC,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOtB,WAAYuB,IAAKN,EAAIJ,MAC1CI,EAAIJ,KADP,KACeI,EAAIH,OADnB,OAMJ,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvB,OACrBmB,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAA,qBAAalB,sCCvBtBsB,8LACgB,IAAAC,EACUC,KAAKzB,MAAzB0B,EADUF,EACVE,QAASC,EADCH,EACDG,OACjBF,KAAKzB,MAAM4B,cAAcF,EAASC,oCAIlC,IAAIE,EAASZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,MAUb,OATKL,KAAKzB,MAAM+B,UACdF,EAASJ,KAAKzB,MAAM6B,OAAOd,IAAI,SAACiB,GAAD,OAC7Bf,EAAAC,EAAAC,cAACc,EAAD,CACEX,IAAKU,EAAME,GACXzB,YAAauB,EAAMvB,YACnBD,MAAOwB,EAAMxB,WAIZS,EAAAC,EAAAC,cAAA,WAAMU,UAjBIM,IAAMC,WAsCZC,sBAjBf,SAAyBC,GAAO,IAAAC,EACFD,EAAME,KAA1Bd,EADsBa,EACtBb,QAASC,EADaY,EACbZ,OADac,EAEFH,EAAMN,MAClC,MAAO,CACLN,UACAG,OAL4BY,EAEtBZ,OAINE,QAN4BU,EAEdV,QAKdJ,WAIJ,SAA4Be,GAC1B,MAAO,CACLd,cAAe,SAACF,EAASC,GAAV,OAAqBe,EAASC,YAAYjB,EAASC,OAIvDU,CAGbO,YAAiBrB,EAAQsB","file":"static/js/5.93e751c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2hafQ\",\"Ingredient\":\"Order_Ingredient__3ffWb\"};","import React from 'react';\r\nimport styles from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n  let formattedPrice = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n  }).format(props.price);\r\n\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ing) => {\r\n    return (\r\n      <span className={styles.Ingredient} key={ing.name}>\r\n        {ing.name} ({ing.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {formattedPrice}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { fetchOrders } from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends React.Component {\r\n  componentDidMount() {\r\n    const { idToken, userId } = this.props;\r\n    this.props.onFetchOrders(idToken, userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { idToken, userId } = state.auth;\r\n  const { orders, loading } = state.order;\r\n  return {\r\n    idToken,\r\n    orders,\r\n    loading,\r\n    userId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onFetchOrders: (idToken, userId) => dispatch(fetchOrders(idToken, userId)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}