{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","Input","props","inputElement","inputClasses","styles","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","label","module","exports","CheckoutSummary","Burger","uppercase","ContactData","react_default","ingredients","Button","clicked","checkoutCancelled","btnType","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","formElementIdentifier","_this","_this$props","order","price","totalPrice","orderData","userId","onOrderBurger","idToken","inputChangedHandler","event","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","React","Component","connect","_state$burgerBuilder","burgerBuilder","_state$auth","auth","dispatch","purchaseBurger","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","path","match","url","component"],"mappings":"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","file":"static/js/3.8d74f7ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [styles.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(styles.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case 'input':\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'textarea':\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'select':\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.displayValue}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <div className={styles.Input}>\r\n      <label className={styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__VVfxU\",\"Label\":\"Input_Label__3U7mq\",\"InputElement\":\"Input_InputElement__3XcFf\",\"Invalid\":\"Input_Invalid__3BiEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__39306\",\"Burger\":\"CheckoutSummary_Burger__g6ttu\",\"uppercase\":\"CheckoutSummary_uppercase__qq1RA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1cQnP\",\"uppercase\":\"ContactData_uppercase__3Us4A\"};","import React from 'react';\r\nimport styles from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={styles.CheckoutSummary}>\r\n      <h1>We hope it tastes delicous!</h1>\r\n      <div className={styles.Burger}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button\r\n        clicked={props.checkoutCancelled}\r\n        className={styles.uppercase}\r\n        btnType=\"Danger\"\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        clicked={props.checkoutContinued}\r\n        className={styles.uppercase}\r\n        btnType=\"Success\"\r\n      >\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport styles from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { updateObject, checkValidity } from '../../../shared/utility';\r\nimport { purchaseBurger } from '../../../store/actions/index';\r\n\r\nclass ContactData extends React.Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'Peter Smith',\r\n        },\r\n        label: 'Your Name:',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: '35 Till Street',\r\n        },\r\n        label: 'Your Street:',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: '20693',\r\n        },\r\n\r\n        label: 'Your Postal Code:',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      country: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'United States Of America',\r\n        },\r\n        label: 'Your Country:',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n          type: 'text',\r\n          placeholder: 'peter01@gmail.com',\r\n        },\r\n        label: 'Your Email:',\r\n        value: '',\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: 'select',\r\n        elementConfig: {\r\n          options: [\r\n            { value: 'fastest', displayValue: 'Fastest' },\r\n            { value: 'cheapest', displayValue: 'Cheapest' },\r\n          ],\r\n        },\r\n        label: 'Your Delivery Methods:',\r\n        value: 'fastest',\r\n        validation: {},\r\n        valid: true,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  orderHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n    const { ingredients, totalPrice, userId } = this.props;\r\n    const order = {\r\n      ingredients,\r\n      price: totalPrice,\r\n      orderData: formData,\r\n      userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.idToken);\r\n  };\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(\r\n      this.state.orderForm[inputIdentifier],\r\n      {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.orderForm[inputIdentifier].validation,\r\n        ),\r\n        touched: true,\r\n      },\r\n    );\r\n    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n\r\n    this.setState({\r\n      orderForm: updatedOrderForm,\r\n      formIsValid,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((formElement) => {\r\n          return (\r\n            <Input\r\n              key={formElement.id}\r\n              elementType={formElement.config.elementType}\r\n              elementConfig={formElement.config.elementConfig}\r\n              value={formElement.config.value}\r\n              label={formElement.config.label}\r\n              invalid={!formElement.config.valid}\r\n              shouldValidate={formElement.config.validation}\r\n              touched={formElement.config.touched}\r\n              changed={(event) =>\r\n                this.inputChangedHandler(event, formElement.id)\r\n              }\r\n            />\r\n          );\r\n        })}\r\n        <Button\r\n          btnType=\"Success\"\r\n          className={styles.uppercase}\r\n          disabled={!this.state.formIsValid}\r\n        >\r\n          Order\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={styles.ContactData}>\r\n        <h4>Enter Your Contact Data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { ingredients, totalPrice } = state.burgerBuilder;\r\n  const { idToken, userId } = state.auth;\r\n  return {\r\n    ingredients,\r\n    totalPrice,\r\n    loading: state.order.loading,\r\n    idToken,\r\n    userId,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onOrderBurger: (orderData, idToken) =>\r\n      dispatch(purchaseBurger(orderData, idToken)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withErrorHandler(ContactData, axios));\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends React.Component {\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/checkout/contact-data');\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}\r\n            ingredients={this.props.ingredients}\r\n          />\r\n          <Route\r\n            path={this.props.match.url + '/contact-data'}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}